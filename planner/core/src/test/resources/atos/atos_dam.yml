tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03
description: Sample 3-tier application
imports: ['tosca-normative-types:1.0.0.wd06-SNAPSHOT', 'seaclouds-types:0.8.0-SNAPSHOT']
topology_template:
  node_templates:
    www:
      type: org.apache.brooklyn.entity.webapp.tomcat.TomcatServer
      properties: {language: JAVA}
      requirements:
      - {host: Amazon_EC2_m4_large_eu_west_1}
    webservices:
      type: org.apache.brooklyn.entity.webapp.tomcat.TomcatServer
      properties:
        language: JAVA
        location: ''
        java_version:
          constraints:
          - {greater_or_equal: '7'}
          - {less_or_equal: '8'}
      requirements:
      - {host: Amazon_EC2_c1_xlarge_eu_central_1}
    db1:
      type: org.apache.brooklyn.entity.database.mysql.MySqlNode
      properties:
        mysql_version:
          constraints:
          - {greater_or_equal: '5.0'}
          - {less_or_equal: '5.6'}
      requirements:
      - {host: Amazon_EC2_t2_micro_us_east_1}
    Amazon_EC2_c1_xlarge_eu_central_1:
      type: seaclouds.nodes.Compute.Amazon_EC2
      properties: {num_cpus: 8, country: Germany, cost: 0.68, city: FRANKFURT, resource_type: compute,
        disk_size: 1680, availability: 0.9995, hardwareId: c1.xlarge, disk_type: sata,
        location: aws-ec2, num_disks: 4, region: eu-central-1, ram: 7, performance: 37}
    Amazon_EC2_m4_large_eu_west_1:
      type: seaclouds.nodes.Compute.Amazon_EC2
      properties: {num_cpus: 2, country: Ireland, performance: 47, cost: 0.17, hardwareId: m4.large,
        city: DUBLIN, resource_type: compute, location: aws-ec2, availability: 0.9995,
        region: eu-west-1, ram: 8}
    Amazon_EC2_t2_micro_us_east_1:
      type: seaclouds.nodes.Compute.Amazon_EC2
      properties: {num_cpus: 1, country: United States, performance: 40, cost: 0.018,
        hardwareId: t2.micro, city: ASHBURN, resource_type: compute, location: aws-ec2,
        availability: 0.9995, region: us-east-1, ram: 1}
    modacloudsDc_www:
      interfaces:
        Standard: {start: 'https://s3-eu-west-1.amazonaws.com/modacloudsdc-start-script/installModacloudsDc.sh'}
      properties:
        shell.env: {MODACLOUDS_TOWER4CLOUDS_DC_SYNC_PERIOD: '10', MODACLOUDS_TOWER4CLOUDS_VM_ID: Amazon_EC2_m4_large_eu_west_1_ID,
          MODACLOUDS_TOWER4CLOUDS_INFLUXDB_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT: '8170',
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_ID: www_ID, MODACLOUDS_TOWER4CLOUDS_INFLUXDB_PORT: '8086',
          METRICS: AverageCpuUtilization;AverageRamUtilization, MODACLOUDS_TOWER4CLOUDS_RESOURCES_KEEP_ALIVE_PERIOD: '25',
          MODACLOUDS_TOWER4CLOUDS_MANAGER_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_VM_TYPE: Amazon_EC2_m4_large_eu_west_1,
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_TYPE: www}
        installLatch: $brooklyn:component("www").attributeWhenReady("service.isUp")
      type: seaclouds.nodes.Datacollector
      requirements:
      - {host: Amazon_EC2_m4_large_eu_west_1}
    javaAppDc_www:
      interfaces:
        Standard: {start: 'https://s3-eu-west-1.amazonaws.com/java-app-dc-start-script/installJavaAppDc.sh'}
      properties:
        installLatch: $brooklyn:component("www").attributeWhenReady("service.isUp")
        env: {MODULE_ID: www, MODACLOUDS_TOWER4CLOUDS_INFLUXDB_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT: '8170',
          MODACLOUDS_TOWER4CLOUDS_INFLUXDB_PORT: '8170', METRICS: ResponseTime, MODACLOUDS_TOWER4CLOUDS_MANAGER_IP: 52.48.187.2}
      type: seaclouds.nodes.Datacollector
      requirements:
      - {host: Amazon_EC2_m4_large_eu_west_1}
    seacloudsDc_www:
      interfaces:
        Standard: {start: 'https://s3-eu-west-1.amazonaws.com/seaclouds-dc/installSeaCloudsDc.sh'}
      properties:
        shell.env: {MODULE_PORT: '8080', MODULE_IP: '$brooklyn:component("www").attributeWhenReady("host.address")',
          MODACLOUDS_TOWER4CLOUDS_INFLUXDB_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT: '8170',
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_ID: www_ID, MODACLOUDS_TOWER4CLOUDS_INFLUXDB_PORT: '8086',
          METRICS: AppAvailability, MODACLOUDS_TOWER4CLOUDS_MANAGER_IP: 52.48.187.2,
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_TYPE: www}
        installLatch: $brooklyn:component("www").attributeWhenReady("service.isUp")
      type: seaclouds.nodes.Datacollector
      requirements:
      - {host: Amazon_EC2_m4_large_eu_west_1}
    modacloudsDc_webservices:
      interfaces:
        Standard: {start: 'https://s3-eu-west-1.amazonaws.com/modacloudsdc-start-script/installModacloudsDc.sh'}
      properties:
        shell.env: {MODACLOUDS_TOWER4CLOUDS_DC_SYNC_PERIOD: '10', MODACLOUDS_TOWER4CLOUDS_VM_ID: Amazon_EC2_c1_xlarge_eu_central_1_ID,
          MODACLOUDS_TOWER4CLOUDS_INFLUXDB_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT: '8170',
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_ID: webservices_ID, MODACLOUDS_TOWER4CLOUDS_INFLUXDB_PORT: '8086',
          METRICS: AverageCpuUtilization;AverageRamUtilization, MODACLOUDS_TOWER4CLOUDS_RESOURCES_KEEP_ALIVE_PERIOD: '25',
          MODACLOUDS_TOWER4CLOUDS_MANAGER_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_VM_TYPE: Amazon_EC2_c1_xlarge_eu_central_1,
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_TYPE: webservices}
        installLatch: $brooklyn:component("webservices").attributeWhenReady("service.isUp")
      type: seaclouds.nodes.Datacollector
      requirements:
      - {host: Amazon_EC2_c1_xlarge_eu_central_1}
    javaAppDc_webservices:
      interfaces:
        Standard: {start: 'https://s3-eu-west-1.amazonaws.com/java-app-dc-start-script/installJavaAppDc.sh'}
      properties:
        installLatch: $brooklyn:component("webservices").attributeWhenReady("service.isUp")
        env: {MODULE_ID: webservices, MODACLOUDS_TOWER4CLOUDS_INFLUXDB_IP: 52.48.187.2,
          MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT: '8170', MODACLOUDS_TOWER4CLOUDS_INFLUXDB_PORT: '8170',
          METRICS: ResponseTime, MODACLOUDS_TOWER4CLOUDS_MANAGER_IP: 52.48.187.2}
      type: seaclouds.nodes.Datacollector
      requirements:
      - {host: Amazon_EC2_c1_xlarge_eu_central_1}
    seacloudsDc_webservices:
      interfaces:
        Standard: {start: 'https://s3-eu-west-1.amazonaws.com/seaclouds-dc/installSeaCloudsDc.sh'}
      properties:
        shell.env: {MODULE_PORT: '8080', MODULE_IP: '$brooklyn:component("webservices").attributeWhenReady("host.address")',
          MODACLOUDS_TOWER4CLOUDS_INFLUXDB_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT: '8170',
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_ID: webservices_ID, MODACLOUDS_TOWER4CLOUDS_INFLUXDB_PORT: '8086',
          METRICS: AppAvailability, MODACLOUDS_TOWER4CLOUDS_MANAGER_IP: 52.48.187.2,
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_TYPE: webservices}
        installLatch: $brooklyn:component("webservices").attributeWhenReady("service.isUp")
      type: seaclouds.nodes.Datacollector
      requirements:
      - {host: Amazon_EC2_c1_xlarge_eu_central_1}
    modacloudsDc_db1:
      interfaces:
        Standard: {start: 'https://s3-eu-west-1.amazonaws.com/modacloudsdc-start-script/installModacloudsDc.sh'}
      properties:
        shell.env: {MODACLOUDS_TOWER4CLOUDS_DC_SYNC_PERIOD: '10', MODACLOUDS_TOWER4CLOUDS_VM_ID: Amazon_EC2_t2_micro_us_east_1_ID,
          MODACLOUDS_TOWER4CLOUDS_INFLUXDB_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT: '8170',
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_ID: db1_ID, MODACLOUDS_TOWER4CLOUDS_INFLUXDB_PORT: '8086',
          METRICS: AverageCpuUtilization;AverageRamUtilization, MODACLOUDS_TOWER4CLOUDS_RESOURCES_KEEP_ALIVE_PERIOD: '25',
          MODACLOUDS_TOWER4CLOUDS_MANAGER_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_VM_TYPE: Amazon_EC2_t2_micro_us_east_1,
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_TYPE: db1}
        installLatch: $brooklyn:component("db1").attributeWhenReady("service.isUp")
      type: seaclouds.nodes.Datacollector
      requirements:
      - {host: Amazon_EC2_t2_micro_us_east_1}
    seacloudsDc_db1:
      interfaces:
        Standard: {start: 'https://s3-eu-west-1.amazonaws.com/seaclouds-dc/installSeaCloudsDc.sh'}
      properties:
        shell.env: {MODULE_PORT: '8080', MODULE_IP: '$brooklyn:component("db1").attributeWhenReady("host.address")',
          MODACLOUDS_TOWER4CLOUDS_INFLUXDB_IP: 52.48.187.2, MODACLOUDS_TOWER4CLOUDS_MANAGER_PORT: '8170',
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_ID: db1_ID, MODACLOUDS_TOWER4CLOUDS_INFLUXDB_PORT: '8086',
          METRICS: AppAvailability, MODACLOUDS_TOWER4CLOUDS_MANAGER_IP: 52.48.187.2,
          MODACLOUDS_TOWER4CLOUDS_INTERNAL_COMPONENT_TYPE: db1}
        installLatch: $brooklyn:component("db1").attributeWhenReady("service.isUp")
      type: seaclouds.nodes.Datacollector
      requirements:
      - {host: Amazon_EC2_t2_micro_us_east_1}
  groups:
    operation_www:
      members: [www]
      policies:
      - QoSInfo: {execution_time: 200 ms, benchmark_platform: hp_cloud_services.2xl,
          type: seaclouds.policies.QoSInfo}
      - dependencies: {operation_webservices: '2', type: seaclouds.policies.dependencies}
      - AppQoSRequirements:
          response_time: {less_than: 2000.0 ms}
          availability: {greater_than: 0.98}
          cost: {less_or_equal: 200.0 euros_per_month}
          workload: {less_or_equal: 50.0 req_per_min}
          type: seaclouds.policies.AppQoSRequirements
      - QoSRequirements:
          AverageThroughput: {less_than: 10.0 req_per_min}
          AverageResponseTime: {less_than: 5000.0 ms}
          type: seaclouds.policies.QoSRequirements
      - ExpectedQualityPOC: {expectedAvailabilityPOC: 0.9999994999999999, fitnessPOC: 0.7189198227572945,
          expectedCostPOC: 1275.8400000000001, type: seaclouds.policies.ExpectedQualityPOC}
    operation_webservices:
      members: [webservices]
      policies:
      - QoSInfo: {execution_time: 100 ms, benchmark_platform: hp_cloud_services.2xl,
          type: seaclouds.policies.QoSInfo}
      - dependencies: {operation_db1: '1', type: seaclouds.policies.dependencies}
    operation_db1:
      members: [db1]
      policies:
      - dependencies: {type: seaclouds.policies.dependencies}
    add_brooklyn_location_Amazon_EC2_c1_xlarge_eu_central_1:
      policies:
      - {brooklyn.location: 'aws-ec2:eu-central-1'}
      members: [Amazon_EC2_c1_xlarge_eu_central_1]
    add_brooklyn_location_Amazon_EC2_t2_micro_us_east_1:
      policies:
      - {brooklyn.location: 'aws-ec2:us-east-1'}
      members: [Amazon_EC2_t2_micro_us_east_1]
    add_brooklyn_location_Amazon_EC2_m4_large_eu_west_1:
      policies:
      - {brooklyn.location: 'aws-ec2:eu-west-1'}
      members: [Amazon_EC2_m4_large_eu_west_1]
    monitoringInformation:
      policies:
      - monitoringrules.information.policy: {id: f3a9e82e-555c-41e3-9a5a-38dc94a1750e,
          type: seaclouds.policies.monitoringrules}
      members: [application]
    sla_gen_info:
      policies:
      - seaclouds.app.information: {id: b43b9316-17c2-48df-a598-c77150839d3d, type: seaclouds.policies.app.information}
      members: [application]
template_name: seaclouds.app.jsaQA9UC
template_version: 1.0.0-SNAPSHOT
