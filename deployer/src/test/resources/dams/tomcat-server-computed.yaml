tosca_definitions_version: tosca_simple_yaml_1_0_0_wd03

imports:
  - tosca-normative-types:1.0.0.wd06-SNAPSHOT

template_name: webchat.tomcat-frontend-compute
template_version: 1.0.0-SNAPSHOT

description: Web-Chat. Front-end is deployed  and hosted using Tomcat

node_types:
  org.apache.brooklyn.entity.webapp.tomcat.TomcatServer:
    derived_from: tosca.nodes.Root
    description: >
      A simple Tomcat server
    properties:
      http.port:
        type: list
        required: false
        entry_schema:
          type: string
      java.sysprops:
        type: map
        required: false
        entry_schema:
          type: string
    requirements:
      - host: tosca.nodes.Compute
        type: tosca.relationships.HostedOn
    artifacts:
      - wars.root:
        type: tosca.artifacts.File

  org.apache.brooklyn.entity.database.mysql.MySqlNode:
    derived_from: tosca.nodes.Root
    description: |
      A MySQL server
    requirements:
    - host: tosca.nodes.Compute
      type: tosca.relationships.HostedOn
    artifacts:
    - creationScriptUrl: null
      type: tosca.artifacts.File


topology_template:
  description: Web Server Sample with Script
  node_templates:
    tomcat_server:
      type: org.apache.brooklyn.entity.webapp.tomcat.TomcatServer
      properties:
        http.port: "8080+"
      artifacts:
        wars.root:
          implementation: "http://search.maven.org/remotecontent?filepath=io/brooklyn/example/brooklyn-example-hello-world-sql-webapp/0.6.0/brooklyn-example-hello-world-sql-webapp-0.6.0.war"
          type: tosca.artifacts.File
      requirements:
      - host: Amazon_EC2_i2_xlarge_us_west_2

    Amazon_EC2_i2_xlarge_us_west_2:
      type: tosca.nodes.Compute
      properties:
        resource_type: compute
        hardwareId: i2.xlarge
        location: aws-ec2
        region: us-west-2
        performance: 90
        availability: 0.9995
        country: United States
        city: SAN JOSE
        cost: 1.001 USD/hour
        disk_size: 800
        num_disks: 1
        num_cpus: 4
        ram: 30.5
        disk_type: ssd

  # if you want to tell brooklyn to assign a location at deploy time, as part of the template, this is the current way.
  # it can also be done with camp, referencing this topology template.
  groups:
    add_brooklyn_location:
      members: [ Amazon_EC2_i2_xlarge_us_west_2 ]
      policies:
      - brooklyn.location: aws-ec2:us-west-2