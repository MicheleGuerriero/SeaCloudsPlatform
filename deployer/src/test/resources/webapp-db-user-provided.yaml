name: Test - Web+DB (User provided-aws)
services:
- serviceType: brooklyn.entity.cloudfoundry.webapp.java.JavaCloudFoundryPaasWebApp
  name: Webapp 
  id: webapp
  location: cloudfoundry-pivotal
  brooklyn.config:
    application-name: test-app-user-provided
    application-url: classpath://brooklyn-webapp-custom-env.war
    bind: 
    - $brooklyn:component("db")
    env: 
      myDbHostName: $brooklyn:component("db").attributeWhenReady("test-brooklyn-app-from-yaml.credentials.hostname")
      myDbUser: $brooklyn:component("db").attributeWhenReady("test-brooklyn-app-from-yaml.credentials.username")
      myDbPassword: $brooklyn:component("db").attributeWhenReady("test-brooklyn-app-from-yaml.credentials.password")
      myDbPort: $brooklyn:component("db").attributeWhenReady("test-brooklyn-app-from-yaml.credentials.port")

- serviceType: brooklyn.entity.cloudfoundry.services.user.UserProvidedService
  name: DB - provided service
  id: db
  location: cloudfoundry-pivotal
  brooklyn.config:
     serviceInstanceName: db
     credentials:
       jdbcUrl: > 
          $brooklyn:formatString("jdbc:mysql://%s:%s/%s", 
             $brooklyn:component("mysql").attributeWhenReady("host.address"),
             $brooklyn:component("mysql").attributeWhenReady("mysql.port"),
             "softcaredb")
       hostname: $brooklyn:component("mysql").attributeWhenReady("host.address")
       port: $brooklyn:component("mysql").attributeWhenReady("port")
       username: root
       password: $brooklyn:component("mysql").attributeWhenReady("host.address")
       

- serviceType: brooklyn.entity.database.mysql.MySqlNode
  name: External DB
  id: mysql
  location: aws-ec2-eu-west
  brooklyn.config:
    creationScriptUrl: classpath://chat-database.sql